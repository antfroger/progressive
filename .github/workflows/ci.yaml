name: CI

on: push

env:
  PHPUNIT_FLAGS: "-v --coverage-text"

jobs:
  php-versions:
    name: Lookup PHP versions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@v5
      - uses: antfroger/php-version-action@v1
        id: versions

  test:
    name: Progressive (PHP ${{ matrix.php-version }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: php-versions
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        php-version: ${{ fromJSON(needs.php-versions.outputs.matrix) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug
          tools: composer:v2

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        shell: bash

      - name: "Cache composer"
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.php-version }}-composer-

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: composer install --prefer-dist --optimize-autoloader

      - name: Run tests
        run: vendor/bin/phpunit ${{ env.PHPUNIT_FLAGS }}



